#!/usr/bin/env python
import boto.ec2.autoscale


#    get_all_groups(names=None, max_records=None, next_token=None)
def autoscale_connect(app):
    autoscale  = boto.ec2.autoscale.connect_to_region(app.config["identity"]['region'],
                                                      aws_access_key_id=app.config['keys.key_id'],
                                                      aws_secret_access_key=app.config['keys.key_secret'],
                                                      security_token=app.config['keys.key_token'])    
    return autoscale

def get_info(autoscale_conn):

    status = {}

    groups = autoscale_conn.get_all_groups()    
    for group in groups:
        status[group.name] = {"instances" : group.instances,
                              "max_size"  : group.max_size,
                              "min_size"  : group.min_size,
                              "desired_size" : group.desired_capacity}


    
    return status

def get_instance_states (app, groups):

    print "States -------------------------------"
    conn = app.config["ec2.conn"]

    for group in groups.keys():
        print "Group ", "+" *40
        print group
        print groups[group]
        if groups[group]["instances"]:
            reservations = conn.get_all_instances(instance_ids=[x.instance_id for x in groups[group]["instances"]])
            print reservations
            for res in reservations:
                for inst in res.instances:
                    print inst
                                               

            
        
if __name__ == "__main__":

    import config_manager as cm
    app = cm.load_configs("production.conf")

    conn = autoscale_connect(app)

    status = get_info(conn)
    print status

    get_instance_states(app, status)
